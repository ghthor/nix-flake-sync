name: CI

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    paths-ignore:
    - '**.md'
    branches:
      - main

jobs:
  nix_fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v30
    - uses: actions/checkout@v4
    - name: Check format
      run: nix fmt
    - name: Check diff
      run: git diff --exit-code

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v30
    - uses: actions/checkout@v4
    - name: Run golangci-lint
      run: nix run .#golangci-lint -- run

  gomod2nix_toml:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v30
    - uses: actions/checkout@v4
    - name: Run gomod2nix
      run: nix run .#gomod2nix -- generate
    - name: Check diff
      run: git diff --exit-code

  # list-jobs:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #     - id: set-matrix
  #       run: |
  #         set -euo pipefail
  #         matrix="$(go run tests/run.go list | jq --raw-input --slurp -rcM '{attr: split("\n")[:-1], os: ["ubuntu-latest"]}')"
  #         echo "::set-output name=matrix::$matrix"

  # builds:
  #   needs: list-jobs
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix: ${{fromJSON(needs.list-jobs.outputs.matrix)}}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v30
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #     - name: "Build gomod2nix"
  #       run: nix-shell --run "go build"
  #     - name: "Run test: ${{ matrix.attr }}"
  #       run: nix-shell --run "go run tests/run.go run ${{ matrix.attr }}"
